!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).nlp=t()}(this,(function(){"use strict";const e=function(e){return e.children=e.children||[],e._cache=e._cache||{},e.props=e.props||{},e._cache.parents=e._cache.parents||[],e},t=/^ *(#|\/\/)/,n=function(t){let n=t.trim().split(/->/),r=[];n.forEach((t=>{r=r.concat(function(t){if(!(t=t.trim()))return null;if(/^\[/.test(t)&&/\]$/.test(t)){let n=(t=(t=t.replace(/^\[/,"")).replace(/\]$/,"")).split(/,/);return n=n.map((e=>e.trim())).filter((e=>e)),n=n.map((t=>e({id:t}))),n}return[e({id:t})]}(t))})),r=r.filter((e=>e));let i=r[0];for(let e=1;e<r.length;e+=1)i.children.push(r[e]),i=r[e];return r[0]},r=e=>{let t=[],n=[e];for(;n.length>0;){let e=n.pop();t.push(e),e.children&&e.children.forEach((e=>{n.push(e)}))}return t},i=function(i=[]){return"string"==typeof i?function(r){let i=r.split(/\r?\n/),o=[];i.forEach((e=>{if(!e.trim()||t.test(e))return;let r=(e=>{const t=/^(  |\t)/;let n=0;for(;t.test(e);)e=e.replace(t,""),n+=1;return n})(e);o.push({indent:r,node:n(e)})}));let s=function(e){let t={children:[]};return e.forEach(((n,r)=>{0===n.indent?t.children=t.children.concat(n.node):e[r-1]&&function(e,t){let n=e[t].indent;for(;t>=0;t-=1)if(e[t].indent<n)return e[t];return e[0]}(e,r).node.children.push(n.node)})),t}(o);return s=e(s),s}(i):(o=i,"[object Array]"===Object.prototype.toString.call(o)?function(t){let n={};t.forEach((e=>{n[e.id]=e}));let r=e({});return t.forEach((t=>{if((t=e(t)).parent)if(n.hasOwnProperty(t.parent)){let e=n[t.parent];delete t.parent,e.children.push(t)}else console.warn(`[Grad] - missing node '${t.parent}'`);else r.children.push(t)})),r}(i):(r(s=i).forEach(e),s));var o,s},o="[0m",s=e=>"[31m"+e+o,c=e=>"[2m"+e+o,l=function(e,t){let n="-> ";t&&(n=c("â†’ "));let i="";return r(e).forEach(((e,r)=>{let o=e.id||"";if(t&&(o=s(o)),0===r&&!e.id)return;let c=e._cache.parents.length;i+="    ".repeat(c)+n+o+"\n"})),i},h=function(e){let t=r(e);t.forEach((e=>{delete(e=Object.assign({},e)).children}));let n=t[0];return n&&!n.id&&0===Object.keys(n.props).length&&t.shift(),t},u={text:l,txt:l,array:h,flat:h},p={nested:!0,json:!0},f=function(e,t="ascii"){return p.hasOwnProperty(t)?e:"debug"===t?(console.log(l(e,!0)),null):u.hasOwnProperty(t)?u[t](e):e};function a(e={},t={}){return Object.keys(t).forEach((n=>{if(t[n]instanceof Set){let r=e[n]||new Set;e[n]=new Set([...r,...t[n]])}else{if(function(e){return e&&"object"==typeof e&&!Array.isArray(e)}(t[n])){let r=e[n]||{};e[n]=Object.assign({},t[n],r)}else if(r=t[n],"[object Array]"!==Object.prototype.toString.call(r)){var r;void 0===e[n]&&(e[n]=t[n])}else{let r=e[n]||[];e[n]=t[n].concat(r)}}})),e}const d=/\//;class g{constructor(e={}){(e=>{let t=[],n=[e];for(;n.length>0;){let e=n.pop();t.push(e),e.children&&e.children.forEach((t=>{e.id&&(e._cache.parents=e._cache.parents||[],t._cache.parents=e._cache.parents.concat([e.id])),n.push(t)}))}})(e),Object.defineProperty(this,"json",{enumerable:!1,value:e,writable:!0})}get children(){return this.json.children}get id(){return this.json.id}get found(){return this.json.id||this.children.length>0}props(e={}){let t=this.json.props||{};return"string"==typeof e&&(t[e]=!0),this.json.props=Object.assign(t,e),this}get(t){if(t=(t||"").trim(),!d.test(t)){let e=this.children.find((e=>e.id===t));return new g(e)}let n=function(e,t){let n=function(e){return"string"!=typeof(e=e||"")?e:(e=e.replace(/^\//,"")).split(/\//)}(t);for(let t=0;t<n.length;t+=1){let r=e.children.find((e=>e.id===n[t]));if(!r)return null;e=r}return e}(this.json,t)||e({});return new g(n)}nodes(){return r(this.json)}cache(){return r(this.json),this}list(){return r(this.json)}fillDown(){return(e=>{let t=[],n=[e];for(;n.length>0;){let e=n.pop();t.push(e),e.children.forEach((t=>{t.props=a(t.props,e.props),n.push(t)}))}})(this.json),this}out(e){return f(this.json,e)}debug(){return f(this.json,"debug"),this}}const j=function(e){let t=i(e);return new g(t)};return j.prototype.plugin=function(e){e(this)},j}));
